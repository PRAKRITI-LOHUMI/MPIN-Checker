# mpin_checker/utils.py

# smaller set
COMMON_MPINS_4 = {"0000", "1111", "1234", "1122", "1212", "2222", "4321", "9999"}
COMMON_MPINS_6 = {"000000", "123456", "111111", "654321", "222222", "121212", "123456"}

'''
# larger set
COMMON_MPINS_4 = {
    '1234', '0000', '1111', '2222', '3333', '4444', '5555', '6666', '7777', '8888', '9999',
    '1122', '2233', '3344', '4455', '5566', '6677', '7788', '8899', '9900', '0011',
    '1212', '2323', '3434', '4545', '5656', '6767', '7878', '8989', '9090', '0101',
    '1010', '2020', '3030', '4040', '5050', '6060', '7070', '8080', '9999',
    '0123', '1230', '2301', '3012', '4321', '3210', '2109', '1098',
    '1357', '2468', '1379', '2580', '1470', '2580', '3691', '0852',
    '1001', '1002', '1003', '1004', '1005', '1006', '1007', '1008', '1009',
    '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009'
    }
COMMON_MPINS_6 = {
    '123456', '000000', '111111', '222222', '333333', '444444', '555555', 
    '666666', '777777', '888888', '999999', '112233', '223344', '334455', 
    '445566', '556677', '667788', '778899', '889900', '990011', '001122',
    '121212', '232323', '343434', '454545', '565656', '676767', '787878',
    '898989', '909090', '010101', '101010', '202020', '303030', '404040',
    '505050', '606060', '707070', '808080', '909090', '123123', '456456',
    '789789', '147147', '258258', '369369', '012345', '123450', '234501',
    '345012', '450123', '501234', '654321', '543210', '432109', '321098',
    '210987', '109876', '098765', '987654', '876543', '765432'
    }
'''

def is_common_mpin(mpin: str) -> bool:
    if len(mpin) == 4:
        return mpin in COMMON_MPINS_4
    elif len(mpin) == 6:
        return mpin in COMMON_MPINS_6
    return False

def get_demographic_mpins(dob: str, anniversary: str, spouse_dob: str):
    # dob, anniversary, spouse_dob in "DDMMYYYY"
    demos = set()

    for date in [dob, anniversary, spouse_dob]:
        if not date:
            continue
        dd, mm, yyyy = date[:2], date[2:4], date[4:]
        demos.update([dd+mm, mm+dd, yyyy[-2:]+dd, yyyy[-2:]+mm])  # 4-digit
        demos.update([dd+mm+yyyy[-2:], yyyy[-2:]+mm+dd])  # 6-digit

    return demos
